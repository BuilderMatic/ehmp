.vitalsWrapper {
    max-height: 150px;
    overflow-y: scroll;
}

.grayText {
    color: #999999;
}

.notLatestVital {
    color: #707070;
    font-style: italic;
}

label.color-DOD {
    background-color: #A56900;
}
label.color-500, label.color-nonDOD {
    background-color: #397BB3;
}
/*Coversheet View Template Styles*/
.row-fluid {
    margin: 1em 0;
    width: auto;
}
.row-fluid a {
  display: block;

}
 #vertLine {
    width: 0px;
    margin-top: 3px;
    border: 1px solid #E5E5E5;
    height: 76px;
    position: absolute;
    left: 50%;
    margin-left: -1px;
}
.vitals-problem-name {
     white-space: nowrap;
}
.no-record{
     text-align: center;
     font-style: italic;
}
.no-value{
    text-align: center;
}
.a-table table{
   float: left;
width: 49%;
margin: 2px;
margin-left: 5px;
border-right: 1px solid #B9B9B9;
}
.b-table table{
    float:left; width: 48%; margin-top: 2px;
    // border-left: 1px solid #BCBCBC;
}
.a-table td, .b-table td {
    padding: 2px 5px
}
tr:nth-child(even) {
    background-color: #f2f8fe;
}
tr.clickable{
    cursor:pointer;
}
tr.clickable:hover{
background-color: #f5f5f5;
}
td.right-aligned{
    text-align: right;
}
.emptyTextVital {
    font-style: italic;
    color: #707070;
    min-height: 40px;
    padding: 10px;
}

[data-appletid="vitals"] {
    span.header-hover:hover{
        cursor: pointer;
    }
    div.gistItem {
        color: #666666;
        padding: 0px 1px 0px 1px;
        border-radius: 1px;
        height: 20px;
        display:inline;
        width: 50%;
        .sub-elements {
            display: none;
        };
        span {
            line-height:20px;
            white-space:nowrap;
        }
        div.gistItem {
            display: block;
            width: 100%;
        }
        .vitalsResult {
            text-align:right;
            padding-right:2px;
        }
         .vitalsUnits {
            text-align:left;
            padding-left:2px;
        }
        .paddingLeft {
            padding-left:5px;
        }
        .graph-container {
            z-index:2;
            height:20px;
            overflow:hidden;
        }
        position:static !important;
    }
    .info-display {
        margin-left: -10px;
        margin-right: 10px;
    }
    .gistList > .gistItem:nth-child(odd) {
        border-right: 1px solid #E5E5E5;
    }

    .gistList .gistItem:nth-child(4n-1){
        background-color: #f2f8fe;
    }
    .gistList .gistItem:nth-child(4n){
        background-color: #f2f8fe;
    }
    .gistList .gistItem:hover {
        color: #000000;
        background-color: #F0F0F0;
    }
    .gistList .gistItem:focus {
        outline-width: 3px;
        outline-offset:-3px
    }
    .clearBoth {
        clear: both;
    }
    .emptyGistList {
        font-style: italic;
        color: gray;
        min-height: 40px;
        padding: 10px;
    }
    .changecolor + .tooltip > .tooltip-inner {
    border: 1px solid #CCCCCC;
    text-align:left;
    max-width: 320px;
        .row{
            background-color: #000;
            color: #fff;
        }
    }
    .changeArrow{
    color: #37779e;
    font-size: 15px;
    }
    .header-bar {
    background-color: white;
    box-shadow: 0px 0px 4px 0px #999999;
    height: 20px;
    margin-bottom: 5px;
    }
    .header{
        color: #206473;
    }
    .warning{
    color: #CC0000;
    font-weight: bold;
    }
    .col-condensed{
    padding-left: 5px;
    padding-right: 5px;
    }

    .gistTrendGraph {
        background-color: transparent;
        display: inline;
        margin-left: -2px;
        +span+.gistTrendGraph {
            margin-left: 1px;
        }
        .outterBorder {
            stroke: #bbbbbb;
            fill: transparent;
        }
        .criticalRange {
            stroke: #e4e4e4;
            fill: #e4e4e4;
        }
        .abnormalRange {
            stroke: #f2f2f2;
            fill: #f2f2f2;
        }
        .normalRange {
            stroke: #ffffff;
            fill: #ffffff;
        }
        .trendLine {
            stroke: #000000;
        }
        .previousValue {
            stroke: #000000;
            fill: #000000;
        }
        .criticalValue {
            stroke: #cc0000;
            fill: #cc0000;
        }
        .abnormalValue {
            stroke: #ff9900;
            fill: #ff9900;
        }
        .normalValue {
            stroke: #0099ff;
            fill: #0099ff;
        }
        .textureHashed {
            path {
                stroke: #bbbbbb;
                stroke-width: 1;
                fill: none;
            }
            rect {
                @extend .abnormalRange;
            }
        }
        .hashedRange {
            fill: url(#textureHashed);
        }
    }
}